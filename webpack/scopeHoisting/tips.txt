    **用babel-loader先将代码处理之后再给webpack处理，若处理后的代码是es5的写法，会造成作用域提升失效**

    这个功能的原理很简单：将所有模块的代码按照引用顺序放在一个函数作用域里，然后适当的重命名一些变量以防止变量名冲突。

    但到目前为止（Webpack 3.3.0），为了在 Webpack 中使用这个功能，你的代码必须是用 ES2015 的模块语法写的。

    暂不支持 CommonJS 模块语法的原因是，这种模块语法中的模块是可以动态加载的

    前面说过，要使用 Scope Hoisting，你的代码必须是用 ES2015 的模块语法写的，但是大部分 NPM 中的模块仍然是 CommonJS 语法（例如 lodash），所以导致 Webpack 回退到了默认的打包方式。

    运行 Webpack 时加上 --display-optimization-bailout 参数可以得知为什么你的项目无法使用 Scope Hoisting

    另外，当你使用这个插件的时候，模块热替换将不起作用，所以最好只在代码优化的时候才使用这个插件。